{"version":3,"file":"static/js/884.81ab1620.chunk.js","mappings":"6LAmDA,UA/CqB,WAAO,IAAD,IACzB,GAA8BA,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,IAE3BI,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCP,EADnC,8CAGFQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAC,GAAI,OAAIV,EAAWU,EAAf,GACb,GAAE,CAACT,IAEJ,IACEW,EAMEb,EANFa,MACAC,EAKEd,EALFc,YAFF,EAOId,EAJFe,OAAAA,OAHF,MAGW,GAHX,EAIEC,EAGEhB,EAHFgB,SAJF,EAOIhB,EAFFiB,aAAAA,OALF,MAKiB,OALjB,IAOIjB,EADFkB,aAAAA,OANF,MAMiB,EANjB,EASA,OACE,iCACE,6BACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,oBAAEd,EAAYe,QAAQC,aAAtB,aAAE,EAA2BC,YAA7B,QAAqC,UAA7C,wBAEF,4BACE,gBAAKC,IAAG,yCAAoCV,GAAeW,IAAI,MAC/D,kCAAQZ,EAAR,YAAiBI,EAAaS,MAAM,EAAG,GAAvC,QACA,kDAAmBR,EAAaS,QAAQ,QACxC,oCACA,wBACGZ,EAAOa,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACnB,OAAO,wBAAcD,GAALC,EACjB,OAEH,sCACA,uBAAId,QAEN,SAAC,EAAAG,KAAD,CAAMC,GAAE,OAAR,mBACA,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,sBACA,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [apiResp, setApiResp] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const locationRef = useRef(location);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=cbdd4abbcb92dd438a6c3b40fc45e1be`\n    )\n      .then(data => data.json())\n      .then(data => setApiResp(data));\n  }, [movieId]);\n\n  const {\n    title,\n    poster_path,\n    genres = [],\n    overview,\n    release_date = '0000',\n    vote_average = 0.0,\n  } = apiResp;\n\n  return (\n    <>\n      <button>\n        <Link to={locationRef.current.state?.from ?? '/movies'}>Go back</Link>\n      </button>\n      <div>\n        <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        <h2>{`${title}(${release_date.slice(0, 4)})`}</h2>\n        <h3>User score{` ${vote_average.toFixed(2)}`}</h3>\n        <h3>Genres</h3>\n        <ul>\n          {genres.map(({ name, id }) => {\n            return <li key={id}>{name}</li>;\n          })}\n        </ul>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n      </div>\n      <Link to={`cast`}>Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["useState","apiResp","setApiResp","movieId","useParams","location","useLocation","locationRef","useRef","useEffect","fetch","then","data","json","title","poster_path","genres","overview","release_date","vote_average","Link","to","current","state","from","src","alt","slice","toFixed","map","name","id"],"sourceRoot":""}