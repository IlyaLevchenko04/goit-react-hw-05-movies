{"version":3,"file":"static/js/597.4c9f3cce.chunk.js","mappings":"sMA6BA,UAxBa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,GAC3B,GAAE,CAACE,KAGF,SAAC,KAAD,UACGF,EAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACnC,OACE,UAAC,KAAD,YACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAcJ,GAAeK,IAAI,GAAGC,MAAM,WACpD,wBAAKP,KACL,uCAAeG,OAHID,EAMxB,KAGN,C,gUCxBYM,GAAaC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,qHAQVC,GAAaD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,uFAKVE,GAAcF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wCAIXG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,QAAPJ,CAAH,yKAYVK,GAAYL,EAAAA,EAAAA,IAAO,MAAPA,CAAH,gDAITM,GAAkBN,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wDAKfO,GAAeP,EAAAA,EAAAA,IAAO,SAAPA,CAAH,yIAQZQ,GAAmBR,EAAAA,EAAAA,IAAOI,EAAAA,QAAPJ,CAAH,wGAOhBS,GAAiBT,EAAAA,EAAAA,IAAO,KAAPA,CAAH,wFAKdU,GAAgBV,EAAAA,EAAAA,IAAO,KAAPA,CAAH,2D,+KC7D1B,IAAMW,EAAU,mCAGHC,EAAc,WACzB,OAAOC,MAAM,2DAAD,OACiDF,IAC3DvB,MAAK,SAAAC,GAAI,OAAIA,EAAKyB,MAAT,GACZ,EAEYC,EAAa,SAAAtB,GACxB,OAAOoB,MAAM,sCAAD,OAC4BpB,EAD5B,4BACkDkB,IAC5DvB,MAAK,SAAAC,GAAI,OAAIA,EAAKyB,MAAT,GACZ,EAEYE,EAAkB,SAAAvB,GAC7B,OAAOoB,MAAM,sCAAD,OAC4BpB,EAD5B,oBAC0CkB,IACpDvB,MAAK,SAAAC,GAAI,OAAIA,EAAKyB,MAAT,GACZ,EAEYG,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2EO,EAD3E,gCAEV9B,MAAK,SAAAC,GAAI,OAAIA,EAAKyB,MAAT,GACZ,EAEY3B,EAAU,SAAAM,GACrB,OAAOoB,MAAM,sCAAD,OAC4BpB,EAD5B,4BACkDkB,IAC5DvB,MAAK,SAAAC,GAAI,OAAIA,EAAKyB,MAAT,GACZ,EAEYlB,EAAgB,SAAAuB,GAC3B,IAAMC,EAAc,yCAAqCD,GACzD,OAAKA,EAIEC,EAtCY,qCAuCpB,C","sources":["components/Cast.jsx","components/styledComponents.jsx","services/apiFilmsServices.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast, picturePicker } from 'services/apiFilmsServices';\nimport { StyledList, StyledItemCast } from './styledComponents';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <StyledList>\n      {cast.map(({ name, profile_path, id, character }) => {\n        return (\n          <StyledItemCast key={id}>\n            <img src={picturePicker(profile_path)} alt=\"\" width=\"100px\" />\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </StyledItemCast>\n        );\n      })}\n    </StyledList>\n  );\n};\n\nexport default Cast;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled('ul')`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  padding-left: 0;\n`;\n\nexport const StyledItem = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 3);\n`;\n\nexport const StyledPhoto = styled('img')`\n  width: 100%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #212121;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n\n  &.active {\n    color: orangered;\n    margin: 15px;\n  }\n`;\n\nexport const StyledNav = styled('nav')`\n  margin-bottom: 15px;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledButton = styled('button')`\n  margin-bottom: 16px;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const StyledLinkButton = styled(NavLink)`\n  color: white;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n`;\n\nexport const StyledItemCast = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 12);\n`;\n\nexport const StyledReviews = styled('ul')`\n  padding: 0;\n  list-style: none;\n`;\n","const API_KEY = 'cbdd4abbcb92dd438a6c3b40fc45e1be';\nconst defaultImage = 'https://i.stack.imgur.com/XFHxd.jpg';\n\nexport const getTranding = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieByName = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(data => data.json());\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const picturePicker = url => {\n  const profilePicture = `https://image.tmdb.org/t/p/w500${url}`;\n  if (!url) {\n    return defaultImage;\n  }\n\n  return profilePicture;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","then","data","map","name","profile_path","id","character","src","picturePicker","alt","width","StyledList","styled","StyledItem","StyledPhoto","StyledLink","NavLink","StyledNav","StyledContainer","StyledButton","StyledLinkButton","StyledItemCast","StyledReviews","API_KEY","getTranding","fetch","json","getReviews","getMovieDetails","getMovieByName","query","url","profilePicture"],"sourceRoot":""}