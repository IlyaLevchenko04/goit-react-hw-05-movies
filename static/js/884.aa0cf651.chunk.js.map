{"version":3,"file":"static/js/884.aa0cf651.chunk.js","mappings":"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","sources":["components/styledComponents.jsx","pages/MovieDetails.jsx","services/apiFilmsServices.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled('ul')`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  padding-left: 0;\n`;\n\nexport const StyledItem = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 3);\n`;\n\nexport const StyledPhoto = styled('img')`\n  width: 100%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #212121;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n\n  &.active {\n    color: orangered;\n    margin: 15px;\n  }\n`;\n\nexport const StyledNav = styled('nav')`\n  margin-bottom: 15px;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledButton = styled('button')`\n  margin-bottom: 16px;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const StyledLinkButton = styled(NavLink)`\n  color: white;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n`;\n\nexport const StyledItemCast = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 12);\n`;\n\nexport const StyledReviews = styled('ul')`\n  padding: 0;\n  list-style: none;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails, picturePicker } from 'services/apiFilmsServices';\nimport {\n  StyledList,\n  StyledContainer,\n  StyledLink,\n  StyledButton,\n  StyledLinkButton,\n} from 'components/styledComponents';\n\nconst MovieDetails = () => {\n  const [apiResp, setApiResp] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const locationRef = useRef(location);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setApiResp(data));\n  }, [movieId]);\n\n  const {\n    title,\n    poster_path = 'https://i.stack.imgur.com/XFHxd.jpg',\n    genres = [],\n    overview,\n    release_date = '0000',\n    vote_average = 0.0,\n  } = apiResp;\n\n  return (\n    <>\n      <StyledButton>\n        <StyledLinkButton to={locationRef.current.state?.from ?? '/movies'}>\n          Go back\n        </StyledLinkButton>\n      </StyledButton>\n      <StyledContainer>\n        <img src={picturePicker(poster_path)} alt=\"\" />\n        <div>\n          <h2>{`${title}(${release_date.slice(0, 4)})`}</h2>\n          <h3>User score{` ${(vote_average * 10).toFixed(0)}%`}</h3>\n          <h3>Genres</h3>\n          <StyledList>\n            {genres.map(({ name, id }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </StyledList>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n      </StyledContainer>\n      <StyledLink to={`cast`}>Cast</StyledLink>\n      <StyledLink to=\"reviews\">Reviews</StyledLink>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n","const API_KEY = 'cbdd4abbcb92dd438a6c3b40fc45e1be';\nconst defaultImage = 'https://i.stack.imgur.com/XFHxd.jpg';\n\nexport const getTranding = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieByName = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(data => data.json());\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const picturePicker = url => {\n  const profilePicture = `https://image.tmdb.org/t/p/w500${url}`;\n  if (!url) {\n    return defaultImage;\n  }\n\n  return profilePicture;\n};\n"],"names":["StyledList","styled","StyledItem","StyledPhoto","StyledLink","NavLink","StyledNav","StyledContainer","StyledButton","StyledLinkButton","StyledItemCast","StyledReviews","useState","apiResp","setApiResp","movieId","useParams","location","useLocation","locationRef","useRef","useEffect","getMovieDetails","then","data","title","poster_path","genres","overview","release_date","vote_average","to","current","state","from","src","picturePicker","alt","slice","toFixed","map","name","id","API_KEY","getTranding","fetch","json","getReviews","getMovieByName","query","getCast","url","profilePicture"],"sourceRoot":""}