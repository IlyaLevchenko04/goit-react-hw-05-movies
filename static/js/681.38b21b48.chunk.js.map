{"version":3,"file":"static/js/681.38b21b48.chunk.js","mappings":"sMA6BA,UAxBgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAWM,EAA5B,GAC1B,GAAE,CAACL,KAGF,UAAC,KAAD,WACsB,IAAnBF,EAAQQ,SAAgB,iDAExBR,EAAQQ,OAAS,GAChBR,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,MAGR,C,gUCxBYC,GAAaC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,qHAQVC,GAAaD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,uFAKVE,GAAcF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wCAIXG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,QAAPJ,CAAH,yKAYVK,GAAYL,EAAAA,EAAAA,IAAO,MAAPA,CAAH,gDAITM,GAAkBN,EAAAA,EAAAA,IAAO,MAAPA,CAAH,wDAKfO,GAAeP,EAAAA,EAAAA,IAAO,SAAPA,CAAH,yIAQZQ,GAAmBR,EAAAA,EAAAA,IAAOI,EAAAA,QAAPJ,CAAH,wGAOhBS,GAAiBT,EAAAA,EAAAA,IAAO,KAAPA,CAAH,wFAKdU,GAAgBV,EAAAA,EAAAA,IAAO,KAAPA,CAAH,2D,+KC7D1B,IAAMW,EAAU,mCAGHC,EAAc,WACzB,OAAOC,MAAM,2DAAD,OACiDF,IAC3DnB,MAAK,SAAAsB,GAAI,OAAIA,EAAKC,MAAT,GACZ,EAEYxB,EAAa,SAAAO,GACxB,OAAOe,MAAM,sCAAD,OAC4Bf,EAD5B,4BACkDa,IAC5DnB,MAAK,SAAAsB,GAAI,OAAIA,EAAKC,MAAT,GACZ,EAEYC,EAAkB,SAAAlB,GAC7B,OAAOe,MAAM,sCAAD,OAC4Bf,EAD5B,oBAC0Ca,IACpDnB,MAAK,SAAAsB,GAAI,OAAIA,EAAKC,MAAT,GACZ,EAEYE,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,iCAC2EO,EAD3E,gCAEV1B,MAAK,SAAAsB,GAAI,OAAIA,EAAKC,MAAT,GACZ,EAEYI,EAAU,SAAArB,GACrB,OAAOe,MAAM,sCAAD,OAC4Bf,EAD5B,4BACkDa,IAC5DnB,MAAK,SAAAsB,GAAI,OAAIA,EAAKC,MAAT,GACZ,EAEYK,EAAgB,SAAAC,GAC3B,IAAMC,EAAc,yCAAqCD,GACzD,OAAKA,EAIEC,EAtCY,qCAuCpB,C","sources":["components/Reviews.jsx","components/styledComponents.jsx","services/apiFilmsServices.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/apiFilmsServices';\nimport { StyledReviews } from './styledComponents';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getReviews(movieId).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  return (\n    <StyledReviews>\n      {reviews.length === 0 && <h2>There are no reviews</h2>}\n\n      {reviews.length > 0 &&\n        reviews.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n    </StyledReviews>\n  );\n};\n\nexport default Reviews;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled('ul')`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  padding-left: 0;\n`;\n\nexport const StyledItem = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 3);\n`;\n\nexport const StyledPhoto = styled('img')`\n  width: 100%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #212121;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n\n  &.active {\n    color: orangered;\n    margin: 15px;\n  }\n`;\n\nexport const StyledNav = styled('nav')`\n  margin-bottom: 15px;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledButton = styled('button')`\n  margin-bottom: 16px;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const StyledLinkButton = styled(NavLink)`\n  color: white;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n`;\n\nexport const StyledItemCast = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 12);\n`;\n\nexport const StyledReviews = styled('ul')`\n  padding: 0;\n  list-style: none;\n`;\n","const API_KEY = 'cbdd4abbcb92dd438a6c3b40fc45e1be';\nconst defaultImage = 'https://i.stack.imgur.com/XFHxd.jpg';\n\nexport const getTranding = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieByName = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(data => data.json());\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const picturePicker = url => {\n  const profilePicture = `https://image.tmdb.org/t/p/w500${url}`;\n  if (!url) {\n    return defaultImage;\n  }\n\n  return profilePicture;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","results","length","map","author","content","id","StyledList","styled","StyledItem","StyledPhoto","StyledLink","NavLink","StyledNav","StyledContainer","StyledButton","StyledLinkButton","StyledItemCast","StyledReviews","API_KEY","getTranding","fetch","data","json","getMovieDetails","getMovieByName","query","getCast","picturePicker","url","profilePicture"],"sourceRoot":""}