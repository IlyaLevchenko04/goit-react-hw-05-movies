{"version":3,"file":"static/js/134.fdf18a01.chunk.js","mappings":"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","sources":["components/TrandingMovies.jsx","components/styledComponents.jsx","pages/Movies.jsx","services/apiFilmsServices.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { picturePicker } from 'services/apiFilmsServices';\nimport { StyledList, StyledItem, StyledPhoto } from './styledComponents';\n\nexport const MoviesList = ({ response }) => {\n  const location = useLocation();\n\n  return (\n    <StyledList>\n      {response.map(({ title, poster_path, id }) => {\n        return (\n          <StyledItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <StyledPhoto src={picturePicker(poster_path)} alt=\"\" />\n              <h2>{title}</h2>\n            </Link>\n          </StyledItem>\n        );\n      })}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  response: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled('ul')`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  padding-left: 0;\n`;\n\nexport const StyledItem = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 3);\n`;\n\nexport const StyledPhoto = styled('img')`\n  width: 100%;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #212121;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n\n  &.active {\n    color: orangered;\n    margin: 15px;\n  }\n`;\n\nexport const StyledNav = styled('nav')`\n  margin-bottom: 15px;\n`;\n\nexport const StyledContainer = styled('div')`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const StyledButton = styled('button')`\n  margin-bottom: 16px;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const StyledLinkButton = styled(NavLink)`\n  color: white;\n  text-decoration: none;\n  margin: 15px;\n  font-size: 20px;\n`;\n\nexport const StyledItemCast = styled('li')`\n  border: solid black 1px;\n  width: calc((100% - 40px) / 12);\n`;\n\nexport const StyledReviews = styled('ul')`\n  padding: 0;\n  list-style: none;\n`;\n","import { MoviesList } from 'components/TrandingMovies';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/apiFilmsServices';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [apiResp, setApiResp] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const HandleSubmit = e => {\n    e.preventDefault();\n    setQuery(searchParams.get('query') || '');\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return setQuery(searchParams.get('query') || '');\n    }\n    setStatus('pending');\n    getMovieByName(query).then(({ results }) => {\n      if (results.length === 0) {\n        setStatus('idle');\n        return alert('There is no film with such name, try again');\n      }\n      setApiResp(results);\n      setStatus('resolved');\n    });\n    // eslint-disable-next-line\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={HandleSubmit}>\n        <input\n          value={searchParams.get('query') || ''}\n          type=\"text\"\n          onChange={e => setSearchParams({ query: e.target.value })}\n        />\n        <button>Search</button>\n      </form>\n      {status === 'pending' && <p>Loading...</p>}\n      {status === 'resolved' && <MoviesList response={apiResp} />}\n    </>\n  );\n};\nexport default Movies;\n","const API_KEY = 'cbdd4abbcb92dd438a6c3b40fc45e1be';\nconst defaultImage = 'https://i.stack.imgur.com/XFHxd.jpg';\n\nexport const getTranding = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const getMovieByName = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(data => data.json());\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  ).then(data => data.json());\n};\n\nexport const picturePicker = url => {\n  const profilePicture = `https://image.tmdb.org/t/p/w500${url}`;\n  if (!url) {\n    return defaultImage;\n  }\n\n  return profilePicture;\n};\n"],"names":["MoviesList","response","location","useLocation","map","title","poster_path","id","Link","to","state","from","src","picturePicker","alt","StyledList","styled","StyledItem","StyledPhoto","StyledLink","NavLink","StyledNav","StyledContainer","StyledButton","StyledLinkButton","StyledItemCast","StyledReviews","useState","query","setQuery","apiResp","setApiResp","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovieByName","then","results","length","alert","onSubmit","e","preventDefault","value","type","onChange","target","API_KEY","getTranding","fetch","data","json","getReviews","getMovieDetails","getCast","url","profilePicture"],"sourceRoot":""}